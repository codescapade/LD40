{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/baseSprite.ts","src/boot.ts","src/game.ts","src/globals.ts","src/main.ts","src/preload.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Globals from './globals';\n\nexport default class BaseSprite extends Phaser.Sprite {\n  private _gridPosition:Phaser.Point;\n\n  constructor (game:Phaser.Game, gridX:number, gridY:number, spriteName:string ) {\n    let worldPos:Phaser.Point = Globals.toWorld(gridX, gridY);\n    super(game, worldPos.x, worldPos.y, spriteName);\n    this.anchor.set(0.5, 0.5);\n    this.game.add.existing(this);\n    this._gridPosition = new Phaser.Point(gridX, gridY);\n  }\n\n  updatePosition (gridX:number, gridY:number):void {\n    this.gridPosition.set(gridX, gridY);\n    let worldPos = Globals.toWorld(gridX, gridY);\n    this.position.set(worldPos.x, worldPos.y);\n  }\n  get gridPosition ():Phaser.Point {\n    return this._gridPosition;\n  }\n}","import Globals from './globals';\n\nexport default class Boot extends Phaser.State {\n  public preload ():void {\n    this.stage.disableVisibilityChange = false;\n    this.stage.smoothed = false;\n    this.scale.pageAlignHorizontally = true;\n    this.scale.pageAlignVertically = true;\n\n    Phaser.Canvas.setImageRenderingCrisp(this.game.canvas);\n\n    this.time.advancedTiming = true;\n    \n    Globals.seed = this.rnd.between(0, 9999999999);\n    this.rnd.sow([Globals.seed.toString()]);\n  }\n  \n  public create ():void {\n    this.game.state.start('preload');\n    \n  }\n}","import Globals from './globals';\nimport BaseSprite from './baseSprite';\n\nexport default class Game extends Phaser.State {\n  private _snake:BaseSprite;\n  private _timer:number = 0;\n  private _delay:number = 500;\n\n  private _leftKey:Phaser.Key;\n  private _rightKey:Phaser.Key;\n  private _upKey:Phaser.Key;\n  private _downKey:Phaser.Key;\n\n  private _desiredRotation:number = 0;\n  private _desiredDirection:Phaser.Point = new Phaser.Point(1, 0);\n  private _currentDirection:Phaser.Point = new Phaser.Point(1, 0);\n\n  private _bodyGroup:Phaser.Group;\n  private _body:BaseSprite[];\n  private _food:BaseSprite;\n\n  public create ():void {\n    this._snake = new BaseSprite(this.game, 1, 1, 'head');\n\n    this._bodyGroup = this.add.group();\n    this._bodyGroup.classType = BaseSprite;\n    for (let i = 0; i < 100; i++) {\n      let part:BaseSprite = new BaseSprite(this.game, 0, 0, 'body');\n      part.kill();\n      this._bodyGroup.add(part);\n    }\n\n    let snakeGridPos:Phaser.Point = this._snake.gridPosition;\n    this._body = [];\n    for (let i = 1; i < 3; i++) {\n      let bodyPart:BaseSprite = this._bodyGroup.getFirstExists(false);\n      bodyPart.revive();\n      bodyPart.updatePosition(snakeGridPos.x - 1, snakeGridPos.y);\n      this._body.push(bodyPart);\n    }\n\n    this._leftKey = this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT);\n    this._rightKey = this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT);\n    this._upKey = this.game.input.keyboard.addKey(Phaser.Keyboard.UP);\n    this._downKey = this.game.input.keyboard.addKey(Phaser.Keyboard.DOWN);\n  }\n\n  public update ():void {\n    if (this._leftKey.justDown) {\n      this._desiredDirection.set(-1, 0);\n      this._desiredRotation = 180;\n    } else if (this._rightKey.justDown) {\n      this._desiredDirection.set(1, 0);\n      this._desiredRotation = 0;\n    } else if (this._upKey.justDown) {\n      this._desiredDirection.set(0, -1);\n      this._desiredRotation = 270;\n    } else if (this._downKey.justDown) {\n      this._desiredDirection.set(0, 1);\n      this._desiredRotation = 90;\n    }\n\n    if (this._timer < this._delay) {\n      this._timer += this.time.elapsed;\n    } else {\n      this._timer = 0;\n      this.updateSnake();\n    }\n  }\n\n  public render ():void {\n    this.game.debug.text(this.time.fps.toString() || '--', 3, 14, '#00ff00');\n  }\n\n  private updateSnake ():void {\n    let difference = Phaser.Point.add(this._desiredDirection, this._currentDirection);\n    if (difference.x != 0 || difference.y != 0) {\n      this._currentDirection = this._desiredDirection.clone();\n      this._snake.angle = this._desiredRotation;\n    }\n    let oldPos:Phaser.Point = this._snake.gridPosition.clone();\n    this._snake.updatePosition(oldPos.x + this._currentDirection.x, oldPos.y + this._currentDirection.y);\n\n    var lastBodyPart:BaseSprite = this._body.pop();\n    lastBodyPart.updatePosition(oldPos.x, oldPos.y);\n    this._body.unshift(lastBodyPart);\n  }\n  \n  private updateFood ():void {\n    let emptyPosition:boolean = false;\n\n  }\n\n  private toGrid (position:Phaser.Point):Phaser.Point {\n    return new Phaser.Point\n  }\n}","export default class Globals {\n  public static readonly TILESIZE:number = 20;\n  \n  public static seed:number = 0;\n\n  public static toGrid (x:number, y:number):Phaser.Point {\n    return new Phaser.Point(Math.floor(x / Globals.TILESIZE), Math.floor(y / Globals.TILESIZE));\n  }\n\n  public static toWorld (x:number, y:number):Phaser.Point {\n    return new Phaser.Point(x * Globals.TILESIZE + Globals.TILESIZE * 0.5,\n      y * Globals.TILESIZE + Globals.TILESIZE * 0.5);\n  }\n}","\nimport Boot from './boot';\nimport Preload from './preload';\nimport Game from './game';\n\nclass Main extends Phaser.Game {\n  public test: 'testing';\n\n  constructor () {\n    super(640, 480, Phaser.AUTO, 'container', null);\n\n    this.state.add('boot', Boot);\n    this.state.add('preload', Preload);\n    this.state.add('game', Game);\n\n    this.state.start('boot');\n  }\n}\n\nwindow.onload = () => {\n  new Main();\n};","import Globals from './globals';\n\nexport default class Preload extends Phaser.State {\n  public preload ():void {\n    this.load.image('head', 'assets/images/head.png');\n    this.load.image('body', 'assets/images/body.png');\n    this.load.image('wall', 'assets/images/wall.png');\n    this.load.image('food', 'assets/images/food.png');\n  }\n\n  public create ():void {\n    console.log(Globals.seed);\n    this.game.state.start('game');\n  }\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYmFzZVNwcml0ZS50cyIsInNyYy9ib290LnRzIiwic3JjL2dhbWUudHMiLCJzcmMvZ2xvYmFscy50cyIsInNyYy9tYWluLnRzIiwic3JjL3ByZWxvYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNBQSx3QkFBZ0MsQUFFaEM7O0lBQWdDOzBCQUc5Qjs7d0JBQWEsQUFBZ0IsTUFBRSxBQUFZLE9BQUUsQUFBWSxPQUFFLEFBQWlCOzhCQUMxRTs7WUFBSSxBQUFRLFdBQWdCLFVBQU8sUUFBQyxBQUFPLFFBQUMsQUFBSyxPQUFFLEFBQUssQUFBQyxBQUFDLEFBQzFELEFBQUs7OzRIQUFDLEFBQUksTUFBRSxBQUFRLFNBQUMsQUFBQyxHQUFFLEFBQVEsU0FBQyxBQUFDLEdBQUUsQUFBVSxBQUFDLEFBQUMsQUFDaEQsQUFBSTs7Y0FBQyxBQUFNLE9BQUMsQUFBRyxJQUFDLEFBQUcsS0FBRSxBQUFHLEFBQUMsQUFBQyxBQUMxQixBQUFJO2NBQUMsQUFBSSxLQUFDLEFBQUcsSUFBQyxBQUFRLEFBQUMsQUFBSSxBQUFDLEFBQUMsU0FDN0IsQUFBSTtjQUFDLEFBQWEsZ0JBQUcsSUFBSSxBQUFNLE9BQUMsQUFBSyxNQUFDLEFBQUssT0FBRSxBQUFLLEFBQUMsQUFBQyxBQUN0RDtlQUFDLEFBRUQsQUFBYzs7Ozs7dUNBQUUsQUFBWSxPQUFFLEFBQVksT0FDeEMsQUFBSTtpQkFBQyxBQUFZLGFBQUMsQUFBRyxJQUFDLEFBQUssT0FBRSxBQUFLLEFBQUMsQUFBQyxBQUNwQztnQkFBSSxBQUFRLFdBQUcsVUFBTyxRQUFDLEFBQU8sUUFBQyxBQUFLLE9BQUUsQUFBSyxBQUFDLEFBQUMsQUFDN0MsQUFBSTtpQkFBQyxBQUFRLFNBQUMsQUFBRyxJQUFDLEFBQVEsU0FBQyxBQUFDLEdBQUUsQUFBUSxTQUFDLEFBQUMsQUFBQyxBQUFDLEFBQzVDLEFBQUMsQUFDRCxBQUFJLEFBQVk7Ozs7NEJBQ2QsQUFBTTttQkFBQyxBQUFJLEtBQUMsQUFBYSxBQUFDLEFBQzVCLEFBQUMsQUFDRjs7Ozs7RUFuQnVDLEFBQU0sT0FBQyxBQUFNOztBQUFyRCxrQkFtQkM7Ozs7Ozs7Ozs7Ozs7O0FDckJELHdCQUFnQyxBQUVoQzs7SUFBMEI7Ozs7Ozs7Ozs7OztBQUV0QixBQUFJLGlCQUFDLEFBQUssTUFBQyxBQUF1QiwwQkFBRyxBQUFLLEFBQUM7QUFDM0MsQUFBSSxpQkFBQyxBQUFLLE1BQUMsQUFBUSxXQUFHLEFBQUssQUFBQztBQUM1QixBQUFJLGlCQUFDLEFBQUssTUFBQyxBQUFxQix3QkFBRyxBQUFJLEFBQUM7QUFDeEMsQUFBSSxpQkFBQyxBQUFLLE1BQUMsQUFBbUIsc0JBQUcsQUFBSSxBQUFDO0FBRXRDLEFBQU0sbUJBQUMsQUFBTSxPQUFDLEFBQXNCLHVCQUFDLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBTSxBQUFDLEFBQUM7QUFFdkQsQUFBSSxpQkFBQyxBQUFJLEtBQUMsQUFBYyxpQkFBRyxBQUFJLEFBQUM7QUFFaEMsc0JBQU8sUUFBQyxBQUFJLE9BQUcsQUFBSSxLQUFDLEFBQUcsSUFBQyxBQUFPLFFBQUMsQUFBQyxHQUFFLEFBQVUsQUFBQyxBQUFDO0FBQy9DLEFBQUksaUJBQUMsQUFBRyxJQUFDLEFBQUcsSUFBQyxDQUFDLFVBQU8sUUFBQyxBQUFJLEtBQUMsQUFBUSxBQUFFLEFBQUMsQUFBQyxBQUFDLEFBQzFDO0FBQUMsQUFFTSxBQUFNOzs7O0FBQ1gsQUFBSSxpQkFBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUssTUFBQyxBQUFTLEFBQUMsQUFBQyxBQUVuQztBQUFDLEFBQ0Y7Ozs7RUFuQmlDLEFBQU0sT0FBQyxBQUFLLEFBQ3JDLEFBQU87O0FBRGhCLGtCQW1CQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDcEJELDJCQUFzQyxBQUV0Qzs7SUFBMEI7b0JBQTFCOzs7OztpSEFFVTs7Y0FBTSxTQUFVLEFBQUMsQUFBQyxBQUNsQjtjQUFNLFNBQVUsQUFBRyxBQUFDLEFBT3BCO2NBQWdCLG1CQUFVLEFBQUMsQUFBQyxBQUM1QjtjQUFpQixvQkFBZ0IsSUFBSSxBQUFNLE9BQUMsQUFBSyxNQUFDLEFBQUMsR0FBRSxBQUFDLEFBQUMsQUFBQyxBQUN4RDtjQUFpQixvQkFBZ0IsSUFBSSxBQUFNLE9BQUMsQUFBSyxNQUFDLEFBQUMsR0FBRSxBQUFDLEFBQUMsQUFBQyxBQWlGbEU7ZUEzRVMsQUFBTSxBQTJFZDs7Ozs7aUNBMUVHLEFBQUk7aUJBQUMsQUFBTSxTQUFHLElBQUksYUFBVSxRQUFDLEFBQUksS0FBQyxBQUFJLE1BQUUsQUFBQyxHQUFFLEFBQUMsR0FBRSxBQUFNLEFBQUMsQUFBQyxBQUV0RCxBQUFJO2lCQUFDLEFBQVUsYUFBRyxBQUFJLEtBQUMsQUFBRyxJQUFDLEFBQUssQUFBRSxBQUFDLEFBQ25DLEFBQUk7aUJBQUMsQUFBVSxXQUFDLEFBQVMsWUFBRyxhQUFVLEFBQUMsQUFDdkMsQUFBRyxBQUFDO2lCQUFDLElBQUksQUFBQyxJQUFHLEFBQUMsR0FBRSxBQUFDLElBQUcsQUFBRyxLQUFFLEFBQUMsQUFBRSxLQUFFLEFBQUMsQUFDN0I7b0JBQUksQUFBSSxPQUFjLElBQUksYUFBVSxRQUFDLEFBQUksS0FBQyxBQUFJLE1BQUUsQUFBQyxHQUFFLEFBQUMsR0FBRSxBQUFNLEFBQUMsQUFBQyxBQUM5RCxBQUFJO3FCQUFDLEFBQUksQUFBRSxBQUFDLEFBQ1osQUFBSTtxQkFBQyxBQUFVLFdBQUMsQUFBRyxJQUFDLEFBQUksQUFBQyxBQUFDLEFBQzVCLEFBQUMsQUFFRDs7Z0JBQUksQUFBWSxlQUFnQixBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQVksQUFBQyxBQUN6RCxBQUFJO2lCQUFDLEFBQUssUUFBRyxBQUFFLEFBQUMsQUFDaEIsQUFBRyxBQUFDO2lCQUFDLElBQUksQUFBQyxLQUFHLEFBQUMsR0FBRSxBQUFDLEtBQUcsQUFBQyxHQUFFLEFBQUMsQUFBRSxNQUFFLEFBQUMsQUFDM0I7b0JBQUksQUFBUSxXQUFjLEFBQUksS0FBQyxBQUFVLFdBQUMsQUFBYyxlQUFDLEFBQUssQUFBQyxBQUFDLEFBQ2hFLEFBQVE7eUJBQUMsQUFBTSxBQUFFLEFBQUMsQUFDbEIsQUFBUTt5QkFBQyxBQUFjLGVBQUMsQUFBWSxhQUFDLEFBQUMsSUFBRyxBQUFDLEdBQUUsQUFBWSxhQUFDLEFBQUMsQUFBQyxBQUFDLEFBQzVELEFBQUk7cUJBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFRLEFBQUMsQUFBQyxBQUM1QixBQUFDLEFBRUQsQUFBSTs7aUJBQUMsQUFBUSxXQUFHLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQVEsU0FBQyxBQUFNLE9BQUMsQUFBTSxPQUFDLEFBQVEsU0FBQyxBQUFJLEFBQUMsQUFBQyxBQUN0RSxBQUFJO2lCQUFDLEFBQVMsWUFBRyxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFRLFNBQUMsQUFBTSxPQUFDLEFBQU0sT0FBQyxBQUFRLFNBQUMsQUFBSyxBQUFDLEFBQUMsQUFDeEUsQUFBSTtpQkFBQyxBQUFNLFNBQUcsQUFBSSxLQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBUSxTQUFDLEFBQU0sT0FBQyxBQUFNLE9BQUMsQUFBUSxTQUFDLEFBQUUsQUFBQyxBQUFDLEFBQ2xFLEFBQUk7aUJBQUMsQUFBUSxXQUFHLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQVEsU0FBQyxBQUFNLE9BQUMsQUFBTSxPQUFDLEFBQVEsU0FBQyxBQUFJLEFBQUMsQUFBQyxBQUN4RSxBQUFDLEFBRU0sQUFBTTs7OztpQ0FDWCxBQUFFLEFBQUM7Z0JBQUMsQUFBSSxLQUFDLEFBQVEsU0FBQyxBQUFRLEFBQUMsVUFBQyxBQUFDLEFBQzNCLEFBQUk7cUJBQUMsQUFBaUIsa0JBQUMsQUFBRyxJQUFDLENBQUMsQUFBQyxHQUFFLEFBQUMsQUFBQyxBQUFDLEFBQ2xDLEFBQUk7cUJBQUMsQUFBZ0IsbUJBQUcsQUFBRyxBQUFDLEFBQzlCLEFBQUMsQUFBQyxBQUFJO3VCQUFLLEFBQUksS0FBQyxBQUFTLFVBQUMsQUFBUSxBQUFDLFVBQUMsQUFBQyxBQUNuQyxBQUFJO3FCQUFDLEFBQWlCLGtCQUFDLEFBQUcsSUFBQyxBQUFDLEdBQUUsQUFBQyxBQUFDLEFBQUMsQUFDakMsQUFBSTtxQkFBQyxBQUFnQixtQkFGaEIsQUFBRSxBQUFDLEFBRWdCLEFBQUMsQUFBQyxBQUM1QixBQUFDLEFBQUMsQUFBSTt1QkFBSyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQVEsQUFBQyxVQUFDLEFBQUMsQUFDaEMsQUFBSTtxQkFBQyxBQUFpQixrQkFBQyxBQUFHLElBQUMsQUFBQyxHQUFFLENBQUMsQUFBQyxBQUFDLEFBQUMsQUFDbEMsQUFBSTtxQkFBQyxBQUFnQixtQkFGaEIsQUFBRSxBQUFDLEFBRWdCLEFBQUcsQUFBQyxBQUM5QixBQUFDLEFBQUMsQUFBSTttQkFBQyxBQUFFLEFBQUMsSUFBQyxBQUFJLEtBQUMsQUFBUSxTQUFDLEFBQVEsQUFBQyxVQUFDLEFBQUMsQUFDbEMsQUFBSTtxQkFBQyxBQUFpQixrQkFBQyxBQUFHLElBQUMsQUFBQyxHQUFFLEFBQUMsQUFBQyxBQUFDLEFBQ2pDLEFBQUk7cUJBQUMsQUFBZ0IsbUJBQUcsQUFBRSxBQUFDLEFBQzdCLEFBQUMsQUFFRCxBQUFFLEFBQUM7O2dCQUFDLEFBQUksS0FBQyxBQUFNLFNBQUcsQUFBSSxLQUFDLEFBQU0sQUFBQyxRQUFDLEFBQUMsQUFDOUIsQUFBSTtxQkFBQyxBQUFNLFVBQUksQUFBSSxLQUFDLEFBQUksS0FBQyxBQUFPLEFBQUMsQUFDbkMsQUFBQyxBQUFDLEFBQUk7bUJBQUMsQUFBQyxBQUNOLEFBQUk7cUJBQUMsQUFBTSxTQUFHLEFBQUMsQUFBQyxBQUNoQixBQUFJO3FCQUFDLEFBQVcsQUFBRSxBQUFDLEFBQ3JCLEFBQUMsQUFDSCxBQUFDLEFBRU0sQUFBTTs7Ozs7aUNBQ1gsQUFBSTtpQkFBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQUcsSUFBQyxBQUFRLEFBQUUsY0FBSSxBQUFJLE1BQUUsQUFBQyxHQUFFLEFBQUUsSUFBRSxBQUFTLEFBQUMsQUFBQyxBQUMzRSxBQUFDLEFBRU8sQUFBVzs7OztzQ0FDakI7Z0JBQUksQUFBVSxhQUFHLEFBQU0sT0FBQyxBQUFLLE1BQUMsQUFBRyxJQUFDLEFBQUksS0FBQyxBQUFpQixtQkFBRSxBQUFJLEtBQUMsQUFBaUIsQUFBQyxBQUFDLEFBQ2xGLEFBQUUsQUFBQztnQkFBQyxBQUFVLFdBQUMsQUFBQyxLQUFJLEFBQUMsS0FBSSxBQUFVLFdBQUMsQUFBQyxLQUFJLEFBQUMsQUFBQyxHQUFDLEFBQUMsQUFDM0MsQUFBSTtxQkFBQyxBQUFpQixvQkFBRyxBQUFJLEtBQUMsQUFBaUIsa0JBQUMsQUFBSyxBQUFFLEFBQUMsQUFDeEQsQUFBSTtxQkFBQyxBQUFNLE9BQUMsQUFBSyxRQUFHLEFBQUksS0FBQyxBQUFnQixBQUFDLEFBQzVDLEFBQUMsQUFDRDs7Z0JBQUksQUFBTSxTQUFnQixBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQVksYUFBQyxBQUFLLEFBQUUsQUFBQyxBQUMzRCxBQUFJO2lCQUFDLEFBQU0sT0FBQyxBQUFjLGVBQUMsQUFBTSxPQUFDLEFBQUMsSUFBRyxBQUFJLEtBQUMsQUFBaUIsa0JBQUMsQUFBQyxHQUFFLEFBQU0sT0FBQyxBQUFDLElBQUcsQUFBSSxLQUFDLEFBQWlCLGtCQUFDLEFBQUMsQUFBQyxBQUFDLEFBRXJHO2dCQUFJLEFBQVksZUFBYyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUcsQUFBRSxBQUFDLEFBQy9DLEFBQVk7eUJBQUMsQUFBYyxlQUFDLEFBQU0sT0FBQyxBQUFDLEdBQUUsQUFBTSxPQUFDLEFBQUMsQUFBQyxBQUFDLEFBQ2hELEFBQUk7aUJBQUMsQUFBSyxNQUFDLEFBQU8sUUFBQyxBQUFZLEFBQUMsQUFBQyxBQUNuQyxBQUFDLEFBRU8sQUFBVTs7OztxQ0FDaEI7Z0JBQUksQUFBYSxnQkFBVyxBQUFLLEFBQUMsQUFFcEMsQUFBQyxBQUVPLEFBQU07Ozs7K0JBQUUsQUFBcUIsVUFDbkMsQUFBTTttQkFBQyxJQUFJLEFBQU0sT0FBQyxBQUFLLEFBQ3pCLEFBQUMsQUFDRjs7Ozs7RUE3RmlDLEFBQU0sT0FBQyxBQUFLOztBQUE5QyxrQkE2RkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzRENoR0Q7O0lBS1MsQUFBTSxBQUFDLEFBQU07Ozs7Ozs7K0JBQUUsQUFBUSxHQUFFLEFBQVEsR0FDdEMsQUFBTTttQkFBQyxJQUFJLEFBQU0sT0FBQyxBQUFLLE1BQUMsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFDLElBQUcsQUFBTyxRQUFDLEFBQVEsQUFBQyxXQUFFLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBQyxJQUFHLEFBQU8sUUFBQyxBQUFRLEFBQUMsQUFBQyxBQUFDLEFBQzlGLEFBQUMsQUFFTSxBQUFNLEFBQUMsQUFBTzs7OztnQ0FBRSxBQUFRLEdBQUUsQUFBUSxHQUN2QyxBQUFNO21CQUFDLElBQUksQUFBTSxPQUFDLEFBQUssTUFBQyxBQUFDLElBQUcsQUFBTyxRQUFDLEFBQVEsV0FBRyxBQUFPLFFBQUMsQUFBUSxXQUFHLEFBQUcsS0FDbkUsQUFBQyxJQUFHLEFBQU8sUUFBQyxBQUFRLFdBQUcsQUFBTyxRQUFDLEFBQVEsV0FBRyxBQUFHLEFBQUMsQUFBQyxBQUNuRCxBQUFDOzs7Ozs7O0FBWHNCLFFBQVEsV0FBVSxBQUFFLEFBQUM7QUFFOUIsUUFBSSxPQUFVLEFBQUMsQUFBQztBQUhoQyxrQkFhQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNaRCxxQkFBMEI7QUFDMUIsd0JBQWdDO0FBQ2hDLHFCQUEwQixBQUUxQjs7SUFBVztvQkFHVDs7b0JBQ0UsQUFBSzs7O2dIQUFDLEFBQUcsS0FBRSxBQUFHLEtBQUUsQUFBTSxPQUFDLEFBQUksTUFBRSxBQUFXLGFBQUUsQUFBSSxBQUFDLEFBQUMsQUFFaEQsQUFBSTs7Y0FBQyxBQUFLLE1BQUMsQUFBRyxJQUFDLEFBQU0sUUFBRSxPQUFJLEFBQUMsQUFBQyxBQUM3QixBQUFJO2NBQUMsQUFBSyxNQUFDLEFBQUcsSUFBQyxBQUFTLFdBQUUsVUFBTyxBQUFDLEFBQUMsQUFDbkMsQUFBSTtjQUFDLEFBQUssTUFBQyxBQUFHLElBQUMsQUFBTSxRQUFFLE9BQUksQUFBQyxBQUFDLEFBRTdCLEFBQUk7Y0FBQyxBQUFLLE1BQUMsQUFBSyxNQUFDLEFBQU0sQUFBQyxBQUFDLEFBQzNCO2VBQUMsQUFDRjs7OztFQVprQixBQUFNLE9BQUMsQUFBSTs7QUFjOUIsQUFBTSxPQUFDLEFBQU0sU0FBRyxBQUFHLEFBQUUsWUFDbkI7UUFBSSxBQUFJLEFBQUUsQUFBQyxBQUNiLEFBQUMsQUFBQzs7Ozs7Ozs7Ozs7Ozs7O0FDckJGLHdCQUFnQyxBQUVoQzs7SUFBNkI7Ozs7Ozs7Ozs7OztBQUV6QixBQUFJLGlCQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxRQUFFLEFBQXdCLEFBQUMsQUFBQztBQUNsRCxBQUFJLGlCQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxRQUFFLEFBQXdCLEFBQUMsQUFBQztBQUNsRCxBQUFJLGlCQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxRQUFFLEFBQXdCLEFBQUMsQUFBQztBQUNsRCxBQUFJLGlCQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxRQUFFLEFBQXdCLEFBQUMsQUFBQyxBQUNwRDtBQUFDLEFBRU0sQUFBTTs7OztBQUNYLEFBQU8sb0JBQUMsQUFBRyxJQUFDLFVBQU8sUUFBQyxBQUFJLEFBQUMsQUFBQztBQUMxQixBQUFJLGlCQUFDLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBSyxNQUFDLEFBQU0sQUFBQyxBQUFDLEFBQ2hDO0FBQUMsQUFDRjs7OztFQVpvQyxBQUFNLE9BQUMsQUFBSyxBQUN4QyxBQUFPOztBQURoQixrQkFZQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgR2xvYmFscyBmcm9tICcuL2dsb2JhbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlU3ByaXRlIGV4dGVuZHMgUGhhc2VyLlNwcml0ZSB7XG4gIHByaXZhdGUgX2dyaWRQb3NpdGlvbjpQaGFzZXIuUG9pbnQ7XG5cbiAgY29uc3RydWN0b3IgKGdhbWU6UGhhc2VyLkdhbWUsIGdyaWRYOm51bWJlciwgZ3JpZFk6bnVtYmVyLCBzcHJpdGVOYW1lOnN0cmluZyApIHtcbiAgICBsZXQgd29ybGRQb3M6UGhhc2VyLlBvaW50ID0gR2xvYmFscy50b1dvcmxkKGdyaWRYLCBncmlkWSk7XG4gICAgc3VwZXIoZ2FtZSwgd29ybGRQb3MueCwgd29ybGRQb3MueSwgc3ByaXRlTmFtZSk7XG4gICAgdGhpcy5hbmNob3Iuc2V0KDAuNSwgMC41KTtcbiAgICB0aGlzLmdhbWUuYWRkLmV4aXN0aW5nKHRoaXMpO1xuICAgIHRoaXMuX2dyaWRQb3NpdGlvbiA9IG5ldyBQaGFzZXIuUG9pbnQoZ3JpZFgsIGdyaWRZKTtcbiAgfVxuXG4gIHVwZGF0ZVBvc2l0aW9uIChncmlkWDpudW1iZXIsIGdyaWRZOm51bWJlcik6dm9pZCB7XG4gICAgdGhpcy5ncmlkUG9zaXRpb24uc2V0KGdyaWRYLCBncmlkWSk7XG4gICAgbGV0IHdvcmxkUG9zID0gR2xvYmFscy50b1dvcmxkKGdyaWRYLCBncmlkWSk7XG4gICAgdGhpcy5wb3NpdGlvbi5zZXQod29ybGRQb3MueCwgd29ybGRQb3MueSk7XG4gIH1cbiAgZ2V0IGdyaWRQb3NpdGlvbiAoKTpQaGFzZXIuUG9pbnQge1xuICAgIHJldHVybiB0aGlzLl9ncmlkUG9zaXRpb247XG4gIH1cbn0iLCJpbXBvcnQgR2xvYmFscyBmcm9tICcuL2dsb2JhbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb290IGV4dGVuZHMgUGhhc2VyLlN0YXRlIHtcbiAgcHVibGljIHByZWxvYWQgKCk6dm9pZCB7XG4gICAgdGhpcy5zdGFnZS5kaXNhYmxlVmlzaWJpbGl0eUNoYW5nZSA9IGZhbHNlO1xuICAgIHRoaXMuc3RhZ2Uuc21vb3RoZWQgPSBmYWxzZTtcbiAgICB0aGlzLnNjYWxlLnBhZ2VBbGlnbkhvcml6b250YWxseSA9IHRydWU7XG4gICAgdGhpcy5zY2FsZS5wYWdlQWxpZ25WZXJ0aWNhbGx5ID0gdHJ1ZTtcblxuICAgIFBoYXNlci5DYW52YXMuc2V0SW1hZ2VSZW5kZXJpbmdDcmlzcCh0aGlzLmdhbWUuY2FudmFzKTtcblxuICAgIHRoaXMudGltZS5hZHZhbmNlZFRpbWluZyA9IHRydWU7XG4gICAgXG4gICAgR2xvYmFscy5zZWVkID0gdGhpcy5ybmQuYmV0d2VlbigwLCA5OTk5OTk5OTk5KTtcbiAgICB0aGlzLnJuZC5zb3coW0dsb2JhbHMuc2VlZC50b1N0cmluZygpXSk7XG4gIH1cbiAgXG4gIHB1YmxpYyBjcmVhdGUgKCk6dm9pZCB7XG4gICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KCdwcmVsb2FkJyk7XG4gICAgXG4gIH1cbn0iLCJpbXBvcnQgR2xvYmFscyBmcm9tICcuL2dsb2JhbHMnO1xuaW1wb3J0IEJhc2VTcHJpdGUgZnJvbSAnLi9iYXNlU3ByaXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSBleHRlbmRzIFBoYXNlci5TdGF0ZSB7XG4gIHByaXZhdGUgX3NuYWtlOkJhc2VTcHJpdGU7XG4gIHByaXZhdGUgX3RpbWVyOm51bWJlciA9IDA7XG4gIHByaXZhdGUgX2RlbGF5Om51bWJlciA9IDUwMDtcblxuICBwcml2YXRlIF9sZWZ0S2V5OlBoYXNlci5LZXk7XG4gIHByaXZhdGUgX3JpZ2h0S2V5OlBoYXNlci5LZXk7XG4gIHByaXZhdGUgX3VwS2V5OlBoYXNlci5LZXk7XG4gIHByaXZhdGUgX2Rvd25LZXk6UGhhc2VyLktleTtcblxuICBwcml2YXRlIF9kZXNpcmVkUm90YXRpb246bnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBfZGVzaXJlZERpcmVjdGlvbjpQaGFzZXIuUG9pbnQgPSBuZXcgUGhhc2VyLlBvaW50KDEsIDApO1xuICBwcml2YXRlIF9jdXJyZW50RGlyZWN0aW9uOlBoYXNlci5Qb2ludCA9IG5ldyBQaGFzZXIuUG9pbnQoMSwgMCk7XG5cbiAgcHJpdmF0ZSBfYm9keUdyb3VwOlBoYXNlci5Hcm91cDtcbiAgcHJpdmF0ZSBfYm9keTpCYXNlU3ByaXRlW107XG4gIHByaXZhdGUgX2Zvb2Q6QmFzZVNwcml0ZTtcblxuICBwdWJsaWMgY3JlYXRlICgpOnZvaWQge1xuICAgIHRoaXMuX3NuYWtlID0gbmV3IEJhc2VTcHJpdGUodGhpcy5nYW1lLCAxLCAxLCAnaGVhZCcpO1xuXG4gICAgdGhpcy5fYm9keUdyb3VwID0gdGhpcy5hZGQuZ3JvdXAoKTtcbiAgICB0aGlzLl9ib2R5R3JvdXAuY2xhc3NUeXBlID0gQmFzZVNwcml0ZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDsgaSsrKSB7XG4gICAgICBsZXQgcGFydDpCYXNlU3ByaXRlID0gbmV3IEJhc2VTcHJpdGUodGhpcy5nYW1lLCAwLCAwLCAnYm9keScpO1xuICAgICAgcGFydC5raWxsKCk7XG4gICAgICB0aGlzLl9ib2R5R3JvdXAuYWRkKHBhcnQpO1xuICAgIH1cblxuICAgIGxldCBzbmFrZUdyaWRQb3M6UGhhc2VyLlBvaW50ID0gdGhpcy5fc25ha2UuZ3JpZFBvc2l0aW9uO1xuICAgIHRoaXMuX2JvZHkgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IDM7IGkrKykge1xuICAgICAgbGV0IGJvZHlQYXJ0OkJhc2VTcHJpdGUgPSB0aGlzLl9ib2R5R3JvdXAuZ2V0Rmlyc3RFeGlzdHMoZmFsc2UpO1xuICAgICAgYm9keVBhcnQucmV2aXZlKCk7XG4gICAgICBib2R5UGFydC51cGRhdGVQb3NpdGlvbihzbmFrZUdyaWRQb3MueCAtIDEsIHNuYWtlR3JpZFBvcy55KTtcbiAgICAgIHRoaXMuX2JvZHkucHVzaChib2R5UGFydCk7XG4gICAgfVxuXG4gICAgdGhpcy5fbGVmdEtleSA9IHRoaXMuZ2FtZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoUGhhc2VyLktleWJvYXJkLkxFRlQpO1xuICAgIHRoaXMuX3JpZ2h0S2V5ID0gdGhpcy5nYW1lLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuS2V5Ym9hcmQuUklHSFQpO1xuICAgIHRoaXMuX3VwS2V5ID0gdGhpcy5nYW1lLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuS2V5Ym9hcmQuVVApO1xuICAgIHRoaXMuX2Rvd25LZXkgPSB0aGlzLmdhbWUuaW5wdXQua2V5Ym9hcmQuYWRkS2V5KFBoYXNlci5LZXlib2FyZC5ET1dOKTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUgKCk6dm9pZCB7XG4gICAgaWYgKHRoaXMuX2xlZnRLZXkuanVzdERvd24pIHtcbiAgICAgIHRoaXMuX2Rlc2lyZWREaXJlY3Rpb24uc2V0KC0xLCAwKTtcbiAgICAgIHRoaXMuX2Rlc2lyZWRSb3RhdGlvbiA9IDE4MDtcbiAgICB9IGVsc2UgaWYgKHRoaXMuX3JpZ2h0S2V5Lmp1c3REb3duKSB7XG4gICAgICB0aGlzLl9kZXNpcmVkRGlyZWN0aW9uLnNldCgxLCAwKTtcbiAgICAgIHRoaXMuX2Rlc2lyZWRSb3RhdGlvbiA9IDA7XG4gICAgfSBlbHNlIGlmICh0aGlzLl91cEtleS5qdXN0RG93bikge1xuICAgICAgdGhpcy5fZGVzaXJlZERpcmVjdGlvbi5zZXQoMCwgLTEpO1xuICAgICAgdGhpcy5fZGVzaXJlZFJvdGF0aW9uID0gMjcwO1xuICAgIH0gZWxzZSBpZiAodGhpcy5fZG93bktleS5qdXN0RG93bikge1xuICAgICAgdGhpcy5fZGVzaXJlZERpcmVjdGlvbi5zZXQoMCwgMSk7XG4gICAgICB0aGlzLl9kZXNpcmVkUm90YXRpb24gPSA5MDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fdGltZXIgPCB0aGlzLl9kZWxheSkge1xuICAgICAgdGhpcy5fdGltZXIgKz0gdGhpcy50aW1lLmVsYXBzZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3RpbWVyID0gMDtcbiAgICAgIHRoaXMudXBkYXRlU25ha2UoKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVuZGVyICgpOnZvaWQge1xuICAgIHRoaXMuZ2FtZS5kZWJ1Zy50ZXh0KHRoaXMudGltZS5mcHMudG9TdHJpbmcoKSB8fCAnLS0nLCAzLCAxNCwgJyMwMGZmMDAnKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlU25ha2UgKCk6dm9pZCB7XG4gICAgbGV0IGRpZmZlcmVuY2UgPSBQaGFzZXIuUG9pbnQuYWRkKHRoaXMuX2Rlc2lyZWREaXJlY3Rpb24sIHRoaXMuX2N1cnJlbnREaXJlY3Rpb24pO1xuICAgIGlmIChkaWZmZXJlbmNlLnggIT0gMCB8fCBkaWZmZXJlbmNlLnkgIT0gMCkge1xuICAgICAgdGhpcy5fY3VycmVudERpcmVjdGlvbiA9IHRoaXMuX2Rlc2lyZWREaXJlY3Rpb24uY2xvbmUoKTtcbiAgICAgIHRoaXMuX3NuYWtlLmFuZ2xlID0gdGhpcy5fZGVzaXJlZFJvdGF0aW9uO1xuICAgIH1cbiAgICBsZXQgb2xkUG9zOlBoYXNlci5Qb2ludCA9IHRoaXMuX3NuYWtlLmdyaWRQb3NpdGlvbi5jbG9uZSgpO1xuICAgIHRoaXMuX3NuYWtlLnVwZGF0ZVBvc2l0aW9uKG9sZFBvcy54ICsgdGhpcy5fY3VycmVudERpcmVjdGlvbi54LCBvbGRQb3MueSArIHRoaXMuX2N1cnJlbnREaXJlY3Rpb24ueSk7XG5cbiAgICB2YXIgbGFzdEJvZHlQYXJ0OkJhc2VTcHJpdGUgPSB0aGlzLl9ib2R5LnBvcCgpO1xuICAgIGxhc3RCb2R5UGFydC51cGRhdGVQb3NpdGlvbihvbGRQb3MueCwgb2xkUG9zLnkpO1xuICAgIHRoaXMuX2JvZHkudW5zaGlmdChsYXN0Qm9keVBhcnQpO1xuICB9XG4gIFxuICBwcml2YXRlIHVwZGF0ZUZvb2QgKCk6dm9pZCB7XG4gICAgbGV0IGVtcHR5UG9zaXRpb246Ym9vbGVhbiA9IGZhbHNlO1xuXG4gIH1cblxuICBwcml2YXRlIHRvR3JpZCAocG9zaXRpb246UGhhc2VyLlBvaW50KTpQaGFzZXIuUG9pbnQge1xuICAgIHJldHVybiBuZXcgUGhhc2VyLlBvaW50XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHbG9iYWxzIHtcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBUSUxFU0laRTpudW1iZXIgPSAyMDtcbiAgXG4gIHB1YmxpYyBzdGF0aWMgc2VlZDpudW1iZXIgPSAwO1xuXG4gIHB1YmxpYyBzdGF0aWMgdG9HcmlkICh4Om51bWJlciwgeTpudW1iZXIpOlBoYXNlci5Qb2ludCB7XG4gICAgcmV0dXJuIG5ldyBQaGFzZXIuUG9pbnQoTWF0aC5mbG9vcih4IC8gR2xvYmFscy5USUxFU0laRSksIE1hdGguZmxvb3IoeSAvIEdsb2JhbHMuVElMRVNJWkUpKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdG9Xb3JsZCAoeDpudW1iZXIsIHk6bnVtYmVyKTpQaGFzZXIuUG9pbnQge1xuICAgIHJldHVybiBuZXcgUGhhc2VyLlBvaW50KHggKiBHbG9iYWxzLlRJTEVTSVpFICsgR2xvYmFscy5USUxFU0laRSAqIDAuNSxcbiAgICAgIHkgKiBHbG9iYWxzLlRJTEVTSVpFICsgR2xvYmFscy5USUxFU0laRSAqIDAuNSk7XG4gIH1cbn0iLCJcbmltcG9ydCBCb290IGZyb20gJy4vYm9vdCc7XG5pbXBvcnQgUHJlbG9hZCBmcm9tICcuL3ByZWxvYWQnO1xuaW1wb3J0IEdhbWUgZnJvbSAnLi9nYW1lJztcblxuY2xhc3MgTWFpbiBleHRlbmRzIFBoYXNlci5HYW1lIHtcbiAgcHVibGljIHRlc3Q6ICd0ZXN0aW5nJztcblxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoNjQwLCA0ODAsIFBoYXNlci5BVVRPLCAnY29udGFpbmVyJywgbnVsbCk7XG5cbiAgICB0aGlzLnN0YXRlLmFkZCgnYm9vdCcsIEJvb3QpO1xuICAgIHRoaXMuc3RhdGUuYWRkKCdwcmVsb2FkJywgUHJlbG9hZCk7XG4gICAgdGhpcy5zdGF0ZS5hZGQoJ2dhbWUnLCBHYW1lKTtcblxuICAgIHRoaXMuc3RhdGUuc3RhcnQoJ2Jvb3QnKTtcbiAgfVxufVxuXG53aW5kb3cub25sb2FkID0gKCkgPT4ge1xuICBuZXcgTWFpbigpO1xufTsiLCJpbXBvcnQgR2xvYmFscyBmcm9tICcuL2dsb2JhbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmVsb2FkIGV4dGVuZHMgUGhhc2VyLlN0YXRlIHtcbiAgcHVibGljIHByZWxvYWQgKCk6dm9pZCB7XG4gICAgdGhpcy5sb2FkLmltYWdlKCdoZWFkJywgJ2Fzc2V0cy9pbWFnZXMvaGVhZC5wbmcnKTtcbiAgICB0aGlzLmxvYWQuaW1hZ2UoJ2JvZHknLCAnYXNzZXRzL2ltYWdlcy9ib2R5LnBuZycpO1xuICAgIHRoaXMubG9hZC5pbWFnZSgnd2FsbCcsICdhc3NldHMvaW1hZ2VzL3dhbGwucG5nJyk7XG4gICAgdGhpcy5sb2FkLmltYWdlKCdmb29kJywgJ2Fzc2V0cy9pbWFnZXMvZm9vZC5wbmcnKTtcbiAgfVxuXG4gIHB1YmxpYyBjcmVhdGUgKCk6dm9pZCB7XG4gICAgY29uc29sZS5sb2coR2xvYmFscy5zZWVkKTtcbiAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ2dhbWUnKTtcbiAgfVxufSJdfQ=="}